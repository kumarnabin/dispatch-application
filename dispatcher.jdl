application {
    config {
        applicationType monolith
        authenticationType jwt
        baseName DispatchApplication
        blueprints []
        buildTool maven
        cacheProvider no
        clientFramework react
        clientPackageManager npm
        creationTimestamp 1703063485871
        databaseType sql
        devDatabaseType mysql
        enableHibernateCache false
        enableSwaggerCodegen false
        enableTranslation false
        jhiPrefix jhi
        jhipsterVersion "8.1.0"
        jwtSecretKey "NzI3NDZiOGMzYTgwODY0NWQyYzhhZmYwNzUzNWEzMTI0ZGVkY2M3MDU2Y2EwNDNlMzY0OGVmODI1YzI5NTAzZDhhYTAyZjUyOGY5ZjM1MWM2YTk4NzRhZjE1YTMxYWEwYjU3NmZjOWM0NDhmY2M2MjJjN2E1Njg3NGMzZTlkMDY="
        languages [en]
        messageBroker false
        nativeLanguage en
        packageName com.konnect.app
        prodDatabaseType mysql
        searchEngine false
        serverPort 8080
        serviceDiscoveryType false
        testFrameworks []
        websocket false
        withAdminUi true
    }
    entities *
}

// Define the Author entity
entity ServiceProvider {
    name String,
    address String,
}

// Define the Book entity with a many-to-one relationship to Author
entity Branch {
    name String,
    publicationDate Instant
}

// Define the Author entity
entity MasterCircuit {
    name String,
    address String,
}

// Define the Book entity with a many-to-one relationship to Author
entity BranchCircuit {
    title String,
    publicationDate Instant
}

entity ExcelData {
    column1 String,
    column2 String,
    column3 String,
    column4 String,
    column5 String,
    column6 String,
    column7 String,
    column8 String,
    column9 String,
    column10 String,
    column11 String,
    column12 String,
    column13 String,
    column14 String,
    column15 String,
    column16 String,
    column17 String,
    column18 String,
    column19 String,
    column20 String,
    column21 String,
    column22 String,
    column23 String,
    column24 String,
    column25 String,
    column26 String,
    column27 String,

    publicationDate Instant
}

entity Team {
    teamNo String,
    supervisor String,
    supervisorPhoneNo String,
    teamLeader String,
    teamLeaderPhone String,
    publicationDate Instant
}

entity Area {
    code String unique,
    detail String,
    publicationDate Instant

}

entity Dispatch {
    voice String,
    data String,
    iptv String,
    customerName String,
    contactNo String,
    oltPort String,
    regDate String,
    fapPort String,
    cpeSn String,
    cpeRx String,
    complain String,
    remark String,
    status String,
    location String,
    printDate LocalDate,
    publicationDate Instant
}

entity Employee {
    name String,
    detail String,
    publicationDate Instant
}


// Create a many-to-one relationship from Book to Author
relationship ManyToOne {
    Branch{serviceProvider} to ServiceProvider
    BranchCircuit{masterCircuit} to MasterCircuit
    Dispatch{team} to Team
    Employee{user} to User with builtInEntity
}
relationship ManyToMany {
    MasterCircuit to ServiceProvider
    BranchCircuit to Branch
    Area to Employee
}

// Specify the DTO (Data Transfer Object) for the Book entity
dto * with mapstruct

// Specify the service for the ServiceProvider entity
service ServiceProvider, Branch, MasterCircuit, BranchCircuit with serviceClass

